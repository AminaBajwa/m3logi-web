{"version":3,"file":"CounterUp-_QH8Lf3J.js","sources":["../../../../components/elements/CounterUp.vue"],"sourcesContent":["<template>\r\n    <span class=\"count-text\" ref=\"counterRef\">\r\n        {{ count }}\r\n    </span>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            count: 0,\r\n            inViewport: false\r\n        };\r\n    },\r\n    props: {\r\n        start: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        end: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        duration: {\r\n            type: Number,\r\n            default: 1000 // In milliseconds\r\n        }\r\n    },\r\n    mounted() {\r\n        this.observer = new IntersectionObserver(this.handleIntersection, {\r\n            threshold: 0.2 // 20% of the element is visible\r\n        });\r\n        this.observer.observe(this.$refs.counterRef);\r\n    },\r\n    beforeUnmount() {\r\n        this.observer.disconnect();\r\n    },\r\n    methods: {\r\n        handleIntersection(entries) {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting && !this.inViewport) {\r\n                    this.inViewport = true;\r\n                    this.startCounter();\r\n                }\r\n            });\r\n        },\r\n        startCounter() {\r\n            let startTime;\r\n            const step = (timestamp) => {\r\n                if (!startTime) startTime = timestamp;\r\n                const progress = timestamp - startTime;\r\n                this.count = Math.floor((this.end - this.start) * (progress / this.duration) + this.start);\r\n                if (progress < this.duration && this.inViewport) {\r\n                    requestAnimationFrame(step);\r\n                }\r\n            };\r\n            requestAnimationFrame(step);\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrInterpolate"],"mappings":";;;AAMA,MAAK,YAAU;AAAA,EACX,OAAO;AACH,WAAO;AAAA,MACH,OAAO;AAAA,MACP,YAAY;AAAA;EAEnB;AAAA,EACD,OAAO;AAAA,IACH,OAAO;AAAA,MACH,MAAM;AAAA,MACN,SAAS;AAAA,IACZ;AAAA,IACD,KAAK;AAAA,MACD,MAAM;AAAA,MACN,UAAU;AAAA,IACb;AAAA,IACD,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,IACb;AAAA,EACH;AAAA,EACD,UAAU;AACN,SAAK,WAAW,IAAI,qBAAqB,KAAK,oBAAoB;AAAA,MAC9D,WAAW;AAAA;AAAA,IACf,CAAC;AACD,SAAK,SAAS,QAAQ,KAAK,MAAM,UAAU;AAAA,EAC9C;AAAA,EACD,gBAAgB;AACZ,SAAK,SAAS;EACjB;AAAA,EACD,SAAS;AAAA,IACL,mBAAmB,SAAS;AACxB,cAAQ,QAAQ,CAAC,UAAU;AACvB,YAAI,MAAM,kBAAkB,CAAC,KAAK,YAAY;AAC1C,eAAK,aAAa;AAClB,eAAK,aAAY;AAAA,QACrB;AAAA,MACJ,CAAC;AAAA,IACJ;AAAA,IACD,eAAe;AACX,UAAI;AACJ,YAAM,OAAO,CAAC,cAAc;AACxB,YAAI,CAAC;AAAW,sBAAY;AAC5B,cAAM,WAAW,YAAY;AAC7B,aAAK,QAAQ,KAAK,OAAO,KAAK,MAAM,KAAK,UAAU,WAAW,KAAK,YAAY,KAAK,KAAK;AACzF,YAAI,WAAW,KAAK,YAAY,KAAK,YAAY;AAC7C,gCAAsB,IAAI;AAAA,QAC9B;AAAA;AAEJ,4BAAsB,IAAI;AAAA,IAC9B;AAAA,EACJ;AACJ;;AA1DA,QAAA,QAAAA,eAAAC,WAAA;AAAA,IACU,OAAM;AAAA,IAAa,KAAI;AAAA,EADjC,GAAA,MAAA,CAAA,KAAAC,eAEW,MAAK,KAAA;;;;;;;;;"}