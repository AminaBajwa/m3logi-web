{
  "resolvedId": "C:/Users/ruman/Downloads/themeforest-jE7N9u7U-tronis-transport-logistics-vue-nuxt-template/tronis/file/components/sections/home1/Section6.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n    <section class=\"call-to-action\" style=\"background-image: url(./images/background/2.jpg)\">\r\n        <div class=\"auto-container\">\r\n            <div class=\"outer-box\">\r\n                <NuxtLink @click=\"openVideo\" class=\"play-now lightbox-image\"><i class=\"icon fa fa-play\"></i><span\r\n                        class=\"ripple\"></span></NuxtLink>\r\n                <div class=\"sec-title light mb-0\">\r\n                    <div class=\"sub-title\">Get in touch with us anytime</div>\r\n                    <h1>Looking for the best <br>logistics transport service?</h1>\r\n                    <NuxtLink to=\"/page-services\" class=\"theme-btn btn-style-one hvr-light\"><span class=\"btn-title\">Get\r\n                            A Quote</span></NuxtLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <modal-video :channel=\"videoChannel\" :videoId=\"videoId\" v-model:isOpen=\"videoIsOpen\" />\r\n</template>\r\n<script>\r\nimport ModalVideo from '../../components/elements/ModalVideo.vue'\r\nexport default {\r\n    components: {\r\n        ModalVideo\r\n    },\r\n    data: () => {\r\n        return {\r\n            videoIsOpen: false\r\n        }\r\n    },\r\n    methods: {\r\n        openVideo() {\r\n            this.videoIsOpen = !this.videoIsOpen\r\n        }\r\n    },\r\n    computed: {\r\n        videoChannel: function () {\r\n            //Logic to extract based on URL\r\n            return 'youtube'\r\n        },\r\n        videoId: function () {\r\n            //Logic to extract based on URL\r\n            return 'QiqQoqtnHrk'\r\n        }\r\n    }\r\n}\r\n</script>",
      "start": 1759905611693,
      "end": 1759905611855,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1759905611855,
      "end": 1759905611855,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1759905611855,
      "end": 1759905611855,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1759905611856,
      "end": 1759905611856,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1759905611856,
      "end": 1759905611856,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1759905611856,
      "end": 1759905611856,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1759905611856,
      "end": 1759905611856,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1759905611856,
      "end": 1759905611856,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\r\nimport ModalVideo from '../../components/elements/ModalVideo.vue'\r\nconst _sfc_main = {\r\n    components: {\r\n        ModalVideo\r\n    },\r\n    data: () => {\r\n        return {\r\n            videoIsOpen: false\r\n        }\r\n    },\r\n    methods: {\r\n        openVideo() {\r\n            this.videoIsOpen = !this.videoIsOpen\r\n        }\r\n    },\r\n    computed: {\r\n        videoChannel: function () {\r\n            //Logic to extract based on URL\r\n            return 'youtube'\r\n        },\r\n        videoId: function () {\r\n            //Logic to extract based on URL\r\n            return 'QiqQoqtnHrk'\r\n        }\r\n    }\r\n}\r\n\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"call-to-action\",\n  style: {\"background-image\":\"url(./images/background/2.jpg)\"}\n}\nconst _hoisted_2 = { class: \"auto-container\" }\nconst _hoisted_3 = { class: \"outer-box\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"i\", { class: \"icon fa fa-play\" }, null, -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"ripple\" }, null, -1)\nconst _hoisted_6 = { class: \"sec-title light mb-0\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"sub-title\" }, \"Get in touch with us anytime\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h1\", null, [\n  /*#__PURE__*/_createTextVNode(\"Looking for the best \"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\"logistics transport service?\")\n], -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"btn-title\" }, \"Get A Quote\", -1)\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NuxtLink = _resolveComponent(\"NuxtLink\")\n  const _component_modal_video = _resolveComponent(\"modal-video\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"section\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_NuxtLink, {\n            onClick: $options.openVideo,\n            class: \"play-now lightbox-image\"\n          }, {\n            default: _withCtx(() => [\n              _hoisted_4,\n              _hoisted_5\n            ]),\n            _: 1\n          }, 8, [\"onClick\"]),\n          _createElementVNode(\"div\", _hoisted_6, [\n            _hoisted_7,\n            _hoisted_8,\n            _createVNode(_component_NuxtLink, {\n              to: \"/page-services\",\n              class: \"theme-btn btn-style-one hvr-light\"\n            }, {\n              default: _withCtx(() => [\n                _hoisted_9\n              ]),\n              _: 1\n            })\n          ])\n        ])\n      ])\n    ]),\n    _createVNode(_component_modal_video, {\n      channel: $options.videoChannel,\n      videoId: $options.videoId,\n      isOpen: _ctx.videoIsOpen,\n      \"onUpdate:isOpen\": _cache[0] || (_cache[0] = $event => ((_ctx.videoIsOpen) = $event))\n    }, null, 8, [\"channel\", \"videoId\", \"isOpen\"])\n  ], 64))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1759905611856,
      "end": 1759905611858,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1759905611858,
      "end": 1759905611858,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1759905611858,
      "end": 1759905611859,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1759905611859,
      "end": 1759905611859,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1759905611859,
      "end": 1759905611859,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1759905611859,
      "end": 1759905611859,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1759905611859,
      "end": 1759905611859,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/ruman/Downloads/themeforest-jE7N9u7U-tronis-transport-logistics-vue-nuxt-template/tronis/file/node_modules/nuxt/dist/app/components/nuxt-link\";\n\r\nimport ModalVideo from '../../components/elements/ModalVideo.vue'\r\nconst _sfc_main = {\r\n    components: {\r\n        ModalVideo\r\n    },\r\n    data: () => {\r\n        return {\r\n            videoIsOpen: false\r\n        }\r\n    },\r\n    methods: {\r\n        openVideo() {\r\n            this.videoIsOpen = !this.videoIsOpen\r\n        }\r\n    },\r\n    computed: {\r\n        videoChannel: function () {\r\n            //Logic to extract based on URL\r\n            return 'youtube'\r\n        },\r\n        videoId: function () {\r\n            //Logic to extract based on URL\r\n            return 'QiqQoqtnHrk'\r\n        }\r\n    }\r\n}\r\n\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"call-to-action\",\n  style: {\"background-image\":\"url(./images/background/2.jpg)\"}\n}\nconst _hoisted_2 = { class: \"auto-container\" }\nconst _hoisted_3 = { class: \"outer-box\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"i\", { class: \"icon fa fa-play\" }, null, -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"ripple\" }, null, -1)\nconst _hoisted_6 = { class: \"sec-title light mb-0\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"sub-title\" }, \"Get in touch with us anytime\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h1\", null, [\n  /*#__PURE__*/_createTextVNode(\"Looking for the best \"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\"logistics transport service?\")\n], -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"btn-title\" }, \"Get A Quote\", -1)\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NuxtLink = __nuxt_component_0\n  const _component_modal_video = _resolveComponent(\"modal-video\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"section\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_NuxtLink, {\n            onClick: $options.openVideo,\n            class: \"play-now lightbox-image\"\n          }, {\n            default: _withCtx(() => [\n              _hoisted_4,\n              _hoisted_5\n            ]),\n            _: 1\n          }, 8, [\"onClick\"]),\n          _createElementVNode(\"div\", _hoisted_6, [\n            _hoisted_7,\n            _hoisted_8,\n            _createVNode(_component_NuxtLink, {\n              to: \"/page-services\",\n              class: \"theme-btn btn-style-one hvr-light\"\n            }, {\n              default: _withCtx(() => [\n                _hoisted_9\n              ]),\n              _: 1\n            })\n          ])\n        ])\n      ])\n    ]),\n    _createVNode(_component_modal_video, {\n      channel: $options.videoChannel,\n      videoId: $options.videoId,\n      isOpen: _ctx.videoIsOpen,\n      \"onUpdate:isOpen\": _cache[0] || (_cache[0] = $event => ((_ctx.videoIsOpen) = $event))\n    }, null, 8, [\"channel\", \"videoId\", \"isOpen\"])\n  ], 64))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1759905611859,
      "end": 1759905611859,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1759905611859,
      "end": 1759905611859,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1759905611859,
      "end": 1759905611859,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1759905611859,
      "end": 1759905611859,
      "order": "normal"
    }
  ]
}
